library("Sleuth3")
library("dplyr")
attach(ex0221)
head(ex02221)
head(ex0221)
t.test(Humerus~Status, ex0221, alternative = "greater")
t.test(Humerus~Status, ex0221, alternative = "less")
ex0221D = ex0221[-Humerus==0.659,]
Humerus==0.659
min(ex0221[Humerus])
min(ex0221$Humerus)
ex0221D = ex0221[-ex0221$Humerus==0.659,]
-ex0221$Humerus==0.659
which.min(Humerus)
ex0221D = ex0221[-which.min(Humerus),]
t.test(Humerus~Status, ex0221D, alternative = "less")
t.test(Humerus~Status, ex0221, alternative = "less")
Sleuth3Manual()
attach(ex0332)
head(ex0332)
?t.test
t.test(ex0332$InState, ex0332$OutOfState, alternative = "less", paired = TRUE)
attach(case0802)
library("Sleuth3")
attach(case0802)
str(case0802)
library("dplyr")
attach(case0802)
## Clean the data
Y1 = case0802 %>%
filter(Voltage == 26) %>%
select(Time) %>%
transmute(logTime = log(Time))
Y2 = case0802 %>%
filter(Voltage == 28) %>%
select(Time) %>%
transmute(logTime = log(Time))
Y1 = as.matrix(Y1)
Y2 = as.matrix(Y2)
tStatistic = mean(Y1)-mean(Y2)
Y1
Y2
Y1 = case0802 %>%
filter(Voltage == 26) %>%
select(Time)
Y1 = case0802 %>%
filter(Voltage == 26) %>%
select(Time) %>%
transmute(logTime = log(Time))
Y2 = case0802 %>%
filter(Voltage == 28) %>%
select(Time)
Y2
?"Sleuth3Manual"
Sleuth3Manual()
n1 = nrow(Y1)
n2 = nrow(Y2)
s1 = var(Y1)
s2 = var(Y2)
sp = sqrt((n1-1)*s1^2 + (n2-2)*s2^2)/sqrt(n1+n2-2)
se = sp*sqrt(1/n1+1/n2)
se
t.test(Humerus~Status, ex0221, alternative = "less", var.equal=TRUE)
t.test(Humerus~Status, ex0221)
t.test(Humerus~Status, ex0221D)
str(ex0332)
attach(ex0332)
## Use paired t-test for problem(a)
ex0332D = ex0332[Type=="Public",]
t.test(ex0332D$InState, ex0332D$OutOfState, alternative = "less", paired = TRUE)
?sample
set.seed(1)
outcome = vector()
upper = qchisq(0.975,10)
lower = qchisq(0.025,10)
for(i in 1:100){
sample = rnorm(10)
var = var(sample)
if(9*var<=upper && 9*var>=lower){
outcome = c(outcome,1)
}else{
outcome = c(outcome,0)
}
}
outcome
library(Sleuth3)
attach(case0601)
library("dplyr")
hearing = case0601 %>%
filter(Handicap=="Hearing") %>%
select(Score)
mobility = case0601 %>%
filter(Handicap!="Hearing") %>%
select(Score)
t.test(hearing,mobility)
t.test(hearing,mobility,var.equal = TRUE)
t.test(hearing,mobility)
str(case0601)
case0601$Handicap
attach(case0601)
library("dplyr")
data3 = case0601 %>%
filter(Handicap!="None") %>%
mutate(group = (Handicap == "Hearing"))
t.test(score~group,data3)
data3 = case0601 %>%
filter(Handicap!="None") %>%
mutate(Group = (Handicap == "Hearing"))
t.test(Score~group,data3)
data3 = case0601 %>%
filter(Handicap!="None") %>%
mutate(Group = (Handicap == "Hearing"))
t.test(Score~Group,data3)
fit = aov(Score~Group, data3)
fit
fit = aov(Score~Group, data3)
drop1(fit,~.,test = "F")
drop1(fit,~.,test = "t")
t.test(Score~Group, data3)
TukeyHSD(fit)
fit = aov(Score~Group, data3)
TukeyHSD(fit)
data3 = case0601 %>%
filter(Handicap!="None") %>%
mutate(Group = (Handicap == "Hearing"),Group = as.factor(Group))
t.test(Score~Group, data3)
fit = aov(Score~Group, data3)
TukeyHSD(fit)
fit = aov(Score~Handicap, data3)
TukeyHSD(fit)
fit = aov(Score~Group, data3)
TukeyHSD(fit)
t.test(Score~Group, data3)
fit = aov(Score~Group, data3)
TukeyHSD(fit)
rm(list=ls())
library(Sleuth3)
Sleuth3Manual()
mean = c(30.20,28.80,26.20,31.10,30.20)
sd = c(3.82,5.26,4.66,4.91,3.53)
n = rep(9,5)
pooled = sum((n-1)*sd^2)/sum(n-1)
pooled
pooled = sqrt(sum((n-1)*sd^2)/sum(n-1))
pooled
anova(lm(Oxygen ~ Bone, ex0523))
t.test(Score~Group, data3)
attach(case0601)
library("dplyr")
data3 = case0601 %>%
filter(Handicap!="None") %>%
mutate(Group = (Handicap == "Hearing"),Group = as.factor(Group))
## Planned comparison
t.test(Score~Group, data3)
install.packages('devtools')
devtools::install_github('rstudio/rsconnect')
rsconnect::setAccountInfo(name='ratsinnyc', token='739580D0DFE066839A346EE2A79CBBDF', secret='6SSYutTHfWJfBb+A4hFEhk3LjlraBKpl552B6o8l')
library(rsconnect)
shiny::runApp('~/Data Science/project2-project2-group2/app123')
library("Sleuth3")
Sleuth3Manual()
attach(case0702)
str(case0702)
fit1 = lm(pH ~ Time, case0702)
?predict
fit1 = lm(pH ~ Time, case0702)
predict(fit1, Time = 5, interval = "predict")
predict(fit1, 5, interval = "predict")
predict(fit1, data.frame(pH = 5), interval = "predict")
str(case0702)
predict(fit1, data.frame(Time = 5), interval = "predict")
predict(fit1, data.frame(Time = 5), interval = "predict", se.fit = TRUE)
library("Sleuths")
library("Sleuth3")
attach(ex0728)
str(ex0728)
library("dplyr")
?mutate
str(ex0728)
data7 = ex0728 %>%
mutate(Group = as.factors(Years == 0))
data7 = ex0728 %>%
mutate(Group = as.factor(Years == 0))
str(data7)
t.test(Activity ~ Group)
t.test(Activity ~ Group, data7)
t.test(Activity ~ Years, data7)
lm(Activity ~ Years, data7)
summaty(lm(Activity ~ Years, data7))
summary(lm(Activity ~ Years, data7))
summary(lm(Activity ~ Years, data7))$Coefficients
summa = summary(lm(Activity ~ Years, data7))
summa$coefficients
t.test(Activity ~ Group, data7)
summary(lm(Activity ~ Years, data7))$coefficients
attach(ex0817)
str(ex0817)
plot(Load,Mass)
split.screen(c(2,2))
plot(Load,Mass)
par(mfrow = c(2,2))
plot(Load,Mass)
plot(Load,Mass)
plot(Load,Mass)
plot(Load,Mass)
plot(Load,Mass)
plot(Load,Mass)
par(mfrow = c(1,1))
plot(Load,Mass)
plot(log(Load),Mass)
plot(Load,Mass)
plot(log(Load),Mass)
plot(1/Load,Mass)
plot(Load,1/Mass)
plot(Load^2,Mass)
plot(Load,Mass^2)
plot(1/Load,Mass)
plot(log(Load),Mass)
plot(Load,Mass)
?pairs
pair(log(Load)+Load ~ log(Mass) + Mass)
pairs(log(Load)+Load ~ log(Mass) + Mass)
attach(ex0817)
pairs(Load ~ Mass + log(Mass)  + 1/Mass + sqrt(Mass))
pairs(Load ~ Mass + log(Mass)  + 1/Mass + sqrt(Mass))
pairs(log(Load) ~ Mass + log(Mass)  + 1/Mass + sqrt(Mass))
pairs(1/Load ~ Mass + log(Mass)  + 1/Mass + sqrt(Mass))
pairs(sqrt(Load) ~ Mass + log(Mass)  + 1/Mass + sqrt(Mass))
fit4 = lm(sqrt(Load) ~ log(Mass))
fit4 = lm(sqrt(Load) ~ log(Mass))
fit4
res4 = fit4$residuals
fitted4 = fit4$fitted.values
plot(res4)
qqnorm(res4)
fit4
fit4 = lm(log(Mass) ~ sqrt(Load))
fit4
res4 = fit4$residuals
fitted4 = fit4$fitted.values
plot(res4)
qqnorm(res4)
fit4
detach(ex0817)
attach(ex0820)
str(ex0802)
str(ex0820)
plot(DemAbsenteeVotes, DemMachineVotes)
data8 = ex0802 %>%
mutate(aPerc = DemAbsenteeVotes/(DemAbsenteeVotes+DemMachineVotes))%>%
mutate(mPerc = DemMachineVotes/(DemAbsenteeVotes+DemMachineVotes))
data8 = ex0820 %>%
mutate(aPerc = DemAbsenteeVotes/(DemAbsenteeVotes+DemMachineVotes))%>%
mutate(mPerc = DemMachineVotes/(DemAbsenteeVotes+DemMachineVotes))
plot(data8$aPerc, data8$mPerc)
plot(DemAbsenteeVotes, DemMachineVotes)
str(ex0820)
plot(DemAbsenteeVotes, DemMachineVotes)
x = ex0820[Year==93, "DemAbsenteeVotes"]
y = ex0820[Year==93, "DemMachineVotes"]
points(x, y, pch=4)
str()
str(ex0820)
plot(DemPctOfAbsenteeVotes, DemPctOfMachineVotes)
x = ex0820[Year==93, "DemPctOfAbsenteeVotes"]
y = ex0820[Year==93, "DemPctOfMachineVotess"]
points(x, y, pch=4)
points(x, y, pch=4)
points(x, y, pch=7)
x
y
y = ex0820[Year==93, "DemPctOfMachineVotess"]
y
y = ex0820[Year==93, ]
y
y = ex0820[Year==93, "DemPctOfMachineVotes"]
points(x, y, pch=7)
points(DemPctOfAbsenteeVotes[Year==93,], DemPctOfMachineVotes[Year==93,])
plot(DemPctOfAbsenteeVotes[Year!=93,], DemPctOfMachineVotes[Year!=93,])
x = ex0820[Year==93, "DemPctOfAbsenteeVotes"]
y = ex0820[Year==93, "DemPctOfMachineVotes"]
points(x, y, pch=7)
fit8 = lm( DemPctOfMachineVotes[Year!=93,]~DemPctOfAbsenteeVotes[Year!=93,])
fit8 = lm(DemPctOfMachineVotes[Year!=93,]~DemPctOfAbsenteeVotes[Year!=93,])
attach(ex0820)
fit8 = lm(ex0820[Year==93, "DemPctOfMachineVotes"]~ex0820[Year!=93, "DemPctOfAbsenteeVotes"])
fit8 = lm(ex0820[Year!=93, "DemPctOfMachineVotes"]~ex0820[Year!=93, "DemPctOfAbsenteeVotes"])
line(fit8)
abline(fit8)
pre = predict(fit8,newdata = data.frame(x=newx),interval = "prediction",type = "response")
newx = seq(0,100)
pre = predict(fit8,newdata = data.frame(x=newx),interval = "prediction",type = "response")
fit8 = lm(ex0820[Year!=93, "DemPctOfMachineVotes"]~ex0820[Year!=93, "DemPctOfAbsenteeVotes"])
pre = predict(fit8,newdata = data.frame("DemPctOfAbsenteeVotes"=newx),interval = "prediction",type = "response")
y = ex0820[Year!=93, "DemPctOfMachineVotes"]
x = ex0820[Year!=93, "DemPctOfAbsenteeVotes"]
fit8 = lm(y~x)
abline(fit8)
newx = seq(0,100)
pre = predict(fit8,newdata = data.frame(x=newx),interval = "prediction",type = "response")
lines(newx,prd[,2],col="red",lty=2)
lines(newx,prd[,3],col="red",lty=2)
prd = predict(fit8,newdata = data.frame(x=newx),interval = "prediction",type = "response")
lines(newx,prd[,2],col="red",lty=2)
lines(newx,prd[,3],col="red",lty=2)
prd = predict(fit8,dataframe(x=49.3))
prd = predict(fit8,data.frame(x=49.3))
prd
summary(fit8)
predict.lm()
?predict.lm()
prd = predict(fit8,data.frame(x=49.3),se.fit = TRUE,pred.var = res.var/weights)
prd$residual.scale
prd
prd = predict(fit8,data.frame(x=49.3),se.fit = TRUE,interval = "prediction")
prd$fit
prd$fit[1]-prd$fit[2]
(prd$fit[1]-prd$fit[2])/qt(0.975,19)
(prd$fit[1]-prd$fit[2])/qt(0.95,19)
(prd$fit[1]-prd$fit[2])/qt(0.975,19)
(79-prd)/sePrd
prd = predict(fit8,data.frame(x=49.3),se.fit = TRUE,interval = "prediction")
pred = prd$fit[1]
se = prd$se.fit
sePrd = (prd$fit[1]-prd$fit[2])/qt(0.975,19)
(79-pred)/sePrd
pred = prd$fit[1]
pred
plot(DemPctOfAbsenteeVotes, DemPctOfMachineVotes)
x = ex0820[Year==93, "DemPctOfAbsenteeVotes"]
y = ex0820[Year==93, "DemPctOfMachineVotes"]
points(x, y, pch=7)
y = ex0820[Year!=93, "DemPctOfMachineVotes"]
x = ex0820[Year!=93, "DemPctOfAbsenteeVotes"]
fit8 = lm(y~x)
abline(fit8)
newx = seq(0,100)
prd = predict(fit8,newdata = data.frame(x=newx),interval = "prediction",type = "response")
lines(newx,prd[,2],col="red",lty=2)
lines(newx,prd[,3],col="red",lty=2)
prd = predict(fit8,data.frame(x=49.3),se.fit = TRUE,interval = "prediction")
prd
fit8
plot(DemPctOfMachineVotes, DemPctOfAbsenteeVotes)
y = ex0820[Year==93, "DemPctOfAbsenteeVotes"]
x = ex0820[Year==93, "DemPctOfMachineVotes"]
points(x, y, pch=7)
x = ex0820[Year!=93, "DemPctOfMachineVotes"]
y = ex0820[Year!=93, "DemPctOfAbsenteeVotes"]
fit8 = lm(y~x)
abline(fit8)
newx = seq(0,100)
prd = predict(fit8,newdata = data.frame(x=newx),interval = "prediction",type = "response")
lines(newx,prd[,2],col="red",lty=2)
lines(newx,prd[,3],col="red",lty=2)
prd = predict(fit8,data.frame(x=49.3),se.fit = TRUE,interval = "prediction")
pred = prd$fit[1]
se = prd$se.fit
sePrd = (prd$fit[1]-prd$fit[2])/qt(0.975,19)
(79-pred)/sePrd
prd
1-pt(4.057263,19)
attach(case0702)
n = nrow(case0702)
fit1 = lm(pH ~ Time, case0702)
predict1 = predict(fit1, data.frame(Time = 5), interval = "prediction")
se.pred = (predict1[,'upr'] - predict1[,'fit']) / qt(0.975,n-2)
detach(case0702)
se.pred
(1-pt(4.057263,19))*2
pred
prd
sePrd = (prd$fit[1]-prd$fit[2])/qt(0.975,19)
sePrd
(79-pred)/sePrd
(1-pt(4.057263,19))*2
22*(1-pt(4.057263,19))*2
nrow(ex0820)
n = nrow(case0702)
fit1 = lm(pH ~ Time, case0702)
predict1 = predict(fit1, data.frame(Time = 5), interval = "prediction")
se.pred = (predict1[,'upr'] - predict1[,'fit']) / qt(0.975,n-3)
detach(case0702)
attach(case0702)
n = nrow(case0702)
fit1 = lm(pH ~ Time, case0702)
predict1 = predict(fit1, data.frame(Time = 5), interval = "prediction")
se.pred = (predict1[,'upr'] - predict1[,'fit']) / qt(0.975,n-3)
detach(case0702)
se.pred
se.pred = (predict1[,'upr'] - predict1[,'fit']) / qt(0.975,n-3)
se.pred = (predict1[,'upr'] - predict1[,'fit']) / qt(0.975,n-3)/2
se.pred
predict1 = predict(fit1, data.frame(Time = 5), interval = "prediction")
predict1
Sleuth3Manual()
Sleuth3Manual()
str(case0902)
Sleuth3Manual()
myMatrix      <- cbind(Brain, Body, Litter, Gestation)
if(require(car)){
scatterplotMatrix(myMatrix,
smooth=FALSE,
diagonal="histogram")
}
install.packages("car")
myMatrix      <- cbind(Brain, log(Body), log(Litter), log(Gestation))
if(require(car)){
scatterplotMatrix(myMatrix,
smooth=FALSE,
diagonal="histogram")
}
myMatrix=cbind(Brain, log(Body), log(Litter), log(Gestation))
if(require(car)){
scatterplotMatrix(myMatrix,
smooth=FALSE,
diagonal="histogram")
}
myMatrix=cbind(Brain, log(Body), log(Litter), log(Gestation))
attach(case0902)
str(case0902)
attach(case0902)
myMatrix=cbind(Brain, log(Body), log(Litter), log(Gestation))
if(require(car)){
scatterplotMatrix(myMatrix,
smooth=FALSE,
diagonal="histogram")
}
Sleuth3Manual()
Sleuth3Manual()
myMatrix=cbind(log(Brain), log(Body), Litter, log(Gestation))
if(require(car)){
scatterplotMatrix(myMatrix,
smooth=FALSE,
diagonal="histogram")
}
x = ex0820[Year!=93, "DemPctOfMachineVotes"]
y = ex0820[Year!=93, "DemPctOfAbsenteeVotes"]
lev = hat(model.matrix(fit62))
attach(ex1120)
fit61 = lm(Calcite ~ Carbonate)
data6 = ex1120[-which.min(Carbonate),]
fit62 = lm(Calcite ~ Carbonate, data = data6)
data6 = data6[-which.min(data6$Carbonate),]
fit63 = lm(Calcite ~ Carbonate, data = data6)
library("Sleuth3")
attach(ex1120)
fit61 = lm(Calcite ~ Carbonate)
data6 = ex1120[-which.min(Carbonate),]
fit62 = lm(Calcite ~ Carbonate, data = data6)
data6 = data6[-which.min(data6$Carbonate),]
fit63 = lm(Calcite ~ Carbonate, data = data6)
lev = hat(model.matrix(fit62))
plot(lev)
lev
lev = hat(model.matrix(fit61))
plot(lev)
lev
